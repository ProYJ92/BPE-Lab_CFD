# .github/workflows/site-ci-cd.yml
name: Web Site CI/CD Pipeline 🚀

########################
# 1. 트리거 정의
########################
on:
  # 코드 변경   →  빌드·품질검사(+ PR 미리보기)
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # 주 1회(일요일 03:00 KST) 링크‧API 헬스체크
  schedule:
    - cron: '0 18 * * 6'   # UTC 18 → KST 03

  # 수동 실행
  workflow_dispatch:

########################
# 2. 공통 설정
########################
permissions:
  contents: read
  pages:    write     # 배포용
  id-token: write     # OIDC 서명

concurrency:
  group: pages-main
  cancel-in-progress: false

env:
  BUILD_DIR: dist          # npm run build 결과물 경로
  NODE_VERSION: '20'       # 필요 시 18/22 변경
  # API 키 예시 (Settings → Secrets 에서 설정)
  # SAMPLE_API_KEY: ${{ secrets.SAMPLE_API_KEY }}

########################
# 3. 잡 정의
########################
jobs:

  # ---------- 3-1 Build & Test ----------
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'           # node_modules 캐싱

      - name: 📦 Install dependencies
        run: npm ci

      # ── 코드 품질 (필요없는 항목은 제거) ──
      - name: 🧹 ESLint / Prettier
        run: npm run lint        # ex) eslint && prettier --check .

      - name: 🖌️ Stylelint
        run: npm run stylelint   # 선택

      - name: 📝 Markdownlint
        run: npx markdownlint "**/*.md" || true

      - name: 🔗 Local link check
        uses: lycheeverse/lychee-action@v1
        with:
          args: --no-progress "src/**/*.html"

      # ── 단위 테스트 / API 모킹 테스트 ──
      - name: ✅ Unit tests
        run: npm test            # ex) jest / vitest

      # ── 프로덕션 빌드 ──
      - name: 🛠️ Build
        run: npm run build       # 예: vite / astro / parcel 등

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_DIR }}

  # ---------- 3-2 Preview (PR) ----------
  preview:
    if: github.event_name == 'pull_request'
    needs: build-test
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: 🚀 Deploy Preview
        id: deploy
        uses: actions/deploy-pages@v4
        with:
          preview: true          # PR 전용 임시 URL 발급

  # ---------- 3-3 Production Deploy ----------
  deploy:
    if: github.event_name == 'push'
    needs: build-test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

  # ---------- 3-4 Weekly Health Check ----------
  healthcheck:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Check external links & APIs
        uses: lycheeverse/lychee-action@v1
        with:
          args: --no-progress --verbose https://YOUR_USERNAME.github.io/YOUR_REPO
